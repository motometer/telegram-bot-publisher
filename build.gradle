plugins {
    id 'java'
    id 'org.springframework.boot' version '2.1.8.RELEASE'
    id 'io.spring.dependency-management' version '1.0.8.RELEASE'
}

group 'org.motometer.bot'
version '0.0.1-SNAPSHOT'

sourceCompatibility = 11

ext {
    testContainversVersion = '1.12.2'
}

repositories {
    mavenLocal()
    mavenCentral()
    maven { url "https://dl.bintray.com/motometer/mvn" }
}

sourceSets {
    integrationTest {
        compileClasspath += main.output + main.compileClasspath
        compileClasspath += test.output + test.compileClasspath
        runtimeClasspath += main.runtimeClasspath + test.runtimeClasspath
    }
}

configurations {
    integrationTestCompile.extendsFrom testCompile
    integrationTestRuntime.extendsFrom testRuntime
    all*.exclude module: "tomcat-embed-core"
}

dependencies {
    implementation 'org.motometer:telegram-bot-api:0.0.2'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-jetty'
    implementation 'org.springframework.kafka:spring-kafka'
    implementation 'org.apache.kafka:kafka-streams'

    compileOnly 'org.projectlombok:lombok:1.18.10'
    annotationProcessor 'org.projectlombok:lombok:1.18.10'

    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.3.1'
    testImplementation 'org.assertj:assertj-core:3.13.2'
    testImplementation 'commons-io:commons-io:2.6'
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.3.1'

    integrationTestImplementation 'org.springframework.boot:spring-boot-starter-test'
    integrationTestImplementation "org.testcontainers:testcontainers:$testContainversVersion"
    integrationTestImplementation "org.testcontainers:junit-jupiter:$testContainversVersion"
    integrationTestImplementation "org.testcontainers:kafka:$testContainversVersion"
}

test {
    useJUnitPlatform()
}

task integrationTest(type: Test) {
    group 'verification'
    description 'Runs the integration tests.'
    testClassesDirs = sourceSets.integrationTest.output.classesDirs
    classpath = sourceSets.integrationTest.runtimeClasspath
    outputs.upToDateWhen { false }
    mustRunAfter test
    useJUnitPlatform()
}

check.dependsOn integrationTest